package com.example.AddressJoin.controllers;

import com.example.AddressJoin.dto.CountryMasterDTO;
import com.example.AddressJoin.dto.DistrictMasterDTO;
import com.example.AddressJoin.dto.StateMasterDTO;
import com.example.AddressJoin.dto.SubDistrictMasterDTO;
import com.example.AddressJoin.dto.response.AddressApiResponse;
import com.example.AddressJoin.services.AddressService;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@Slf4j
@RequiredArgsConstructor
@RestController
@RequestMapping("/address")
public class AddressMasterControllerImpl implements AddressMasterController {

    private final AddressService addressService;

    @Override
    @GetMapping("/getCountryWithStatesDistrictsSubDistricts")
    public ResponseEntity<AddressApiResponse<CountryMasterDTO>> getCountryWithStatesDistrictsSubDistricts(@RequestParam Long countryId) {
        log.info("Fetching country with ID: {}", countryId);
        AddressApiResponse<CountryMasterDTO> response = addressService.getCountryWithStatesDistrictsSubDistricts(countryId);
        return ResponseEntity.status(response.getStatus()).body(response);
    }

    @Override
    @GetMapping("/getStatesByCountry")
    public ResponseEntity<AddressApiResponse<StateMasterDTO>> getStatesByCountry(@RequestParam Long countryId) {
        log.info("Fetching states for country with ID: {}", countryId);
        AddressApiResponse<StateMasterDTO> response = addressService.getStatesByCountry(countryId);
        return ResponseEntity.status(response.getStatus()).body(response);
    }

    @Override
    @GetMapping("/getDistrictsByState")
    public ResponseEntity<AddressApiResponse<DistrictMasterDTO>> getDistrictsByState(@RequestParam Long stateId) {
        log.info("Fetching districts for state with ID: {}", stateId);
        AddressApiResponse<DistrictMasterDTO> response = addressService.getDistrictsByState(stateId);
        return ResponseEntity.status(response.getStatus()).body(response);
    }

    @Override
    @GetMapping("/getSubDistrictsByDistrict")
    public ResponseEntity<AddressApiResponse<SubDistrictMasterDTO>> getSubDistrictsByDistrict(@RequestParam Long districtId) {
        log.info("Fetching sub-districts for district with ID: {}", districtId);
        AddressApiResponse<SubDistrictMasterDTO> response = addressService.getSubDistrictsByDistrict(districtId);
        return ResponseEntity.status(response.getStatus()).body(response);
    }
}
